{"version":3,"sources":["components/ScrollDownArrow/ScrollDownArrow.js","components/Countdown/Countdown.js","helpers/query.js","components/LaunchInformation/LaunchInformation.jsx","components/SearchBar/SearchBar.js","components/NavBar/NavBar.js","components/MissionCard/MissionCard.js","components/CardBoard/CardBoard.js","components/ViewWindow/ViewWindow.js","components/DetailWindow/DetailWindow.js","components/LookupViewer/LookupViewer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["ScrollDownArrow","className","Countdown","props","updateTminusString","date","timeOfLaunch_unix","currentTimeUnixRaw","Date","now","secondsToLaunch","Math","floor","rawDays","roundedDays","rawHours","roundedHours","rawMinutes","roundedMinutes","seconds","tMinusTime","substr","setState","fetchLaunchData","a","fetch","response","json","data","state","nameOfNextLaunch","nextLaunchTimeUnix","dateString","id","this","selector","console","log","then","result","date_unix","name","toString","catch","e","setInterval","Component","queryById","collection","fieldsToInclude","url","body","query","_id","options","select","field","method","headers","Accept","JSON","stringify","LaunchInformation","React","useState","patchUrl","launchInformation","flightNumber","launchPad","redditLink","launchInfo","setLaunchInfo","getLandingZoneName","useCallback","landingString","init","rawData","launchpad","docs","full_name","links","patch","large","details","flight_number","landingZone","reddit","campaign","useEffect","src","alt","href","SearchBar","type","onChange","search","placeholder","NavBar","onMissionSearchClick","onUpcomingSearchClick","currentView","onClick","MissionCard","photoLink","missionName","resourceClick","key","CardBoard","display","viewMode","filteredDatabase","map","i","whatDoIShow","ViewWindow","children","DetailWindow","requestedRecord","database","resourceRequested","toGMTString","back","style","border","fontSize","padding","margin","launchSite","orbit","width","height","frameBorder","videoUrl","allowFullScreen","LookupViewer","allData","isInfoView","document","getElementsByClassName","scrollTo","App","buildDatabase","allRecords","small","youtube_id","event","onCoresSearchClick","onPayloadsSearchClick","goBack","searchFunction","searchTerm","target","value","trim","toLowerCase","filter","record","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.489c4949.chunk.js","sourcesContent":["import React from 'react';\nimport '../../styles/ScrollDownArrow.css';\n\n// Adapted from a CodePen by https://codepen.io/xonic\nconst ScrollDownArrow = () => {\n  return(\n    <div className='scroll-master'>\n      <div className=\"scroll-container\">\n      <div className=\"chevron\"></div>\n      <div className=\"chevron\"></div>\n      <div className=\"chevron\"></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ScrollDownArrow;\n","import React, { Component } from 'react';\nimport ScrollIntoView from 'react-scroll-into-view';\nimport '../../styles/Countdown.css';\nimport ScrollDownArrow from '../ScrollDownArrow/ScrollDownArrow';\nimport 'tachyons';\n\nclass Countdown extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      nameOfNextLaunch: 'Loading...',\n      nextLaunchTimeUnix: 'Loading...',\n      tMinusTime: 'Loading...',\n      dateString: 'Loading...',\n    }\n  }\n\n  render(){\n    return(\n      <section id='countdown' className='scroll-child'>\n        <div className='countdown-container'>\n          <div className='display-container'>\n            <div className='launch-name c-element'>{this.state.nameOfNextLaunch}</div>\n            <div className='t-minus c-element'>\n              <span className='border'>\n                {this.state.tMinusTime}\n              </span>\n            </div>\n            <div className='launch-date c-element'>The launch is: {this.state.dateString}</div>\n          </div>\n\n          <div>\n            <ScrollIntoView selector='#launch-info'>\n              <ScrollDownArrow />\n            </ScrollIntoView>\n          </div>\n\n        </div>\n\n      </section>\n    )\n  }\n\n  componentDidMount(){\n    // Say whether the component is mounted and request the data from API\n    console.log(`Countdown component mounted successfully!`);\n    const data = this.fetchLaunchData();\n    console.log(data)\n\n\n    // When the data is recieved, update the state...\n    data.then(result => {\n    let date = new Date(result.date_unix*1000);\n    this.setState({nameOfNextLaunch: result.name, nextLaunchTimeUnix: result.date_unix, dateString: date.toString(),});\n      }).catch(e=>console.log(e));\n\n    // ...and then continuusly work out the 't-minus' time to launch, updating the state everytime it changes\n    setInterval(() => this.updateTminusString(this.state.nextLaunchTimeUnix),100);\n\n\n\n  }\n\n  updateTminusString = (date) => {\n    // Updates the state to reflect the time to the input, the 'date' variable\n    let timeOfLaunch_unix = date;\n\n    let currentTimeUnixRaw = Date.now()/1000;\n    let currentTimeUnix = Math.floor(currentTimeUnixRaw);\n    //.log(`The UNIX time of launch is ${timeOfLaunch_unix}`);\n    //console.log(`The UNIX time now is ${currentTimeUnix}`);\n\n    let secondsToLaunch = timeOfLaunch_unix - currentTimeUnix;\n    //console.log(`There are ${secondsToLaunch} seconds until launch.`);\n\n    let rawDays = secondsToLaunch/86400;\n    let roundedDays = Math.floor(rawDays);\n    //console.log(`There are ${roundedDays} whole days until launch.`);\n\n    let rawHours = (secondsToLaunch%86400)/3600;\n    let roundedHours = Math.floor(rawHours);\n    //console.log(`There are ${roundedHours} whole hours until launch.`);\n\n    let rawMinutes = ((secondsToLaunch%86400)%3600)/60;\n    let roundedMinutes = Math.floor(rawMinutes);\n    //console.log(`There are ${roundedMinutes} whole minutes until launch.`);\n\n    let seconds = secondsToLaunch - (86400*roundedDays) - (3600*roundedHours) - (60*roundedMinutes);\n    //console.log(`Finally, there are ${seconds} seconds left until launch.`);\n\n    //let longFormTime = `There are ${roundedDays} days, ${roundedHours} hours, ${roundedMinutes} minutes and ${seconds} seconds until launch.`;\n    let tMinusTime = `T- ${('00' + roundedDays).substr(-3)}:${('0' + roundedHours).substr(-2)}:${('0' + roundedMinutes).substr(-2)}:${('0' + seconds).substr(-2)}`\n    this.setState({tMinusTime: tMinusTime});\n  }\n\n  fetchLaunchData = async () => {\n    const response = await fetch('https://api.spacexdata.com/v4/launches/next');\n    const data = await response.json();\n    return data;\n  }\n\n}\n\nexport default Countdown;\n","export const queryById = async (collection, id, fieldsToInclude) => {\n  try {\n    const url = `https://api.spacexdata.com/v4/${collection}/query`;\n    const body = {\n      query: {\n        _id: id,\n      },\n      options: {},\n    };\n\n    if (fieldsToInclude) {\n      body.options.select = {};\n      for (const field of fieldsToInclude) {\n        body.options.select[field] = 1;\n      }\n    }\n\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    });\n    return await response.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport \"../../styles/LaunchInformation.css\";\nimport \"../App/App.css\";\nimport { queryById } from \"../../helpers/query\";\n\nconst LaunchInformation = (props) => {\n  const [launchInfo, setLaunchInfo] = React.useState({\n    patchUrl: \"\",\n    launchInformation: \"Loading...\",\n    flightNumber: \"Loading...\",\n    launchPad: \"Loading...\",\n    name: \"Loading...\",\n    redditLink: \"Loading...\",\n  });\n\n  const getLandingZoneName = React.useCallback((landingString) => {\n    switch (landingString) {\n      case \"JRTI\":\n        return \"Just Read The Instructions\";\n      case \"OCISLY\":\n        return \"Of Course I Still Love You\";\n      default:\n        return \"Unknown\";\n    }\n  }, []);\n\n  const init = React.useCallback(async () => {\n    try {\n      const rawData = await fetch(\n        \"https://api.spacexdata.com/v5/launches/next\"\n      );\n      const data = await rawData.json();\n      const launchPad = (\n        await queryById(\"launchpads\", data.launchpad, [\"full_name\"])\n      ).docs[0].full_name;\n\n      setLaunchInfo({\n        patchUrl: data.links.patch.large,\n        launchInformation:\n          data.details ??\n          \"Unfortunately there's no information for this launch at the moment :(\",\n        flightNumber: data.flight_number,\n        launchPad,\n        landingZone: getLandingZoneName(),\n        name: data.name,\n        redditLink: data.links.reddit.campaign,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [getLandingZoneName]);\n\n  React.useEffect(() => {\n    init();\n  }, [init]);\n\n  return (\n    <section id=\"launch-info\" className=\"scroll-child\">\n      <div className=\"launch-info-container\">\n        <div className=\"info-display-container\">\n          <div className=\"info-top\">\n            <div>\n              {launchInfo.patchUrl ? (\n                <img src={launchInfo.patchUrl} alt=\"Mission Patch\" />\n              ) : (\n                <>No mission patch available :(</>\n              )}\n            </div>\n            <div className=\"launch-facts\">\n              <p>\n                Mission: {launchInfo.name}\n                <br></br>\n                <br></br>\n                This is launch number {launchInfo.flightNumber} for SpaceX\n                <br></br>\n                <br></br>\n                Launch Site: {launchInfo.launchPad}\n                <br></br>\n                <br></br>\n                Landing Zone: {launchInfo.landingZone}\n                <br></br>\n                <br></br>\n                {launchInfo.redditLink && (\n                  <>\n                    Be a part of the launch campaign with us on{\" \"}\n                    <a href={launchInfo.redditLink}>Reddit</a>!\n                  </>\n                )}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"info-bottom\">\n            <p className=\"scrollable\">{launchInfo.launchInformation}</p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default LaunchInformation;\n","import React from 'react';\nimport '../../styles/SearchBar.css';\n\nconst SearchBar = (props) => {\n  return (  \n        <div className='search-container'>\n          <input className='search-input' type='text' onChange={props.search} placeholder='Search...'/>\n        </div>\n  )\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport '../../styles/NavBar.css';\nimport SearchBar from '../SearchBar/SearchBar';\n\nconst NavBar = ({ onMissionSearchClick, onUpcomingSearchClick, currentView, search}) => {\n  return (\n    <section id='nav-bar' className='scroll-child'>\n      <div className='nav-bar-container'>\n        <div className='search-bar'><SearchBar search={search}/></div>\n        <button id='missions' className={(currentView==='missions')?'active mission-button':'notActive mission-button'} onClick={onMissionSearchClick}>Missions</button>\n        <button id='upcoming' className={(currentView==='upcoming')?'active upcoming-button':'notActive upcoming-button'} onClick={onUpcomingSearchClick}>Upcoming</button>\n          {/*<button id='cores' className={(currentView==='cores')?'active':'notActive'} onClick={onCoresSearchClick}>Cores</button>\n            <button id='payloads' className={(currentView==='payloads')?'active':'notActive'} onClick={onPayloadsSearchClick}>Landing Zones</button>*/}\n      </div>\n    </section>\n  )\n}\n\nexport default NavBar;\n","import React from 'react';\nimport 'tachyons';\nimport '../../styles/Card.css';\n\nconst MissionCard = ({ photoLink, missionName, id, resourceClick}) => {\n  return (\n    <div key={id} id={id} onClick={() => resourceClick(id)} className = 'mission-card grow tc dib br4 pa3 ma2 bw2 shadow-5'>\n      <div className='card-title-container'>\n      <img className='card-image' src={photoLink} alt='missionName' />\n        <p className='mission-title'>{missionName}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default MissionCard;\n","import React from 'react';\n\nimport MissionCard from '../MissionCard/MissionCard';\n\nconst CardBoard = (props) => {\n\n\n  const whatDoIShow = () => {\n      switch (props.state.viewMode){\n        case 'missions':\n          return props.state.filteredDatabase.map((e,i)=><MissionCard id={e.id} key={e.id} resourceClick={props.resourceClick} missionName={e.name} photoLink={e.patchUrl}/>);\n\n        default:\n          return 'Coming Soon!';\n      }\n  }\n\nlet display = whatDoIShow();\n\nreturn (<div>{display}</div>)\n\n}\n\nexport default CardBoard;\n","import React, { Component } from 'react';\nimport '../../styles/ViewWindow.css';\n\nclass ViewWindow extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    }\n  }\n\n  render(){\n    return (\n      <section id='view'>\n        <div className='view-window-container bottom-scroll'>\n          <div className='view-display'>\n            {this.props.children}\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default ViewWindow;\n","import React from 'react';\nimport '../../styles/DetailWindow.css';\n\nconst DetailWindow = (props) => {\n\n  let requestedRecord = props.state.database[props.state.resourceRequested];\n  let date = new Date(requestedRecord.date*1000).toGMTString();\n\n  return (\n\n  <section id='detail-screen'>\n    <div className='detail-window-container'>\n      <div className='patch-and-back'>\n        <div className='mission-image'>\n          <img src={requestedRecord.patchUrl} onClick={props.back} alt='Mission Patch' />\n        </div>\n      </div>\n\n      <div className='mission-title' style={{border: '0px solid transparent',fontSize: '25px'}}>\n        {requestedRecord.name}<br/>\n        <div className='subtitle'>\n          (Click patch to return)\n        </div>\n      </div>\n\n      <p style={{padding: '3vh 3vw', margin: '0px 0px'}}>Launched: {requestedRecord.launchSite}, {date}\n        <br/>\n        <br/>\n        Orbit type: {requestedRecord.orbit}\n        <br/>\n        <br/>\n        Launch Information: {requestedRecord.details}\n        <br/>\n        <br/>\n\n      </p>\n      <div className='youtube-video'>\n        <iframe style={{width: '100%', height: '100%'}} frameBorder='0' src={requestedRecord.videoUrl} allowFullScreen></iframe>\n      </div>\n\n\n    </div>\n  </section>\n\n  )\n\n}\n\nexport default DetailWindow;\n","import React from 'react';\nimport CardBoard from '../CardBoard/CardBoard';\nimport ViewWindow from '../ViewWindow/ViewWindow';\nimport DetailWindow from '../DetailWindow/DetailWindow';\nimport '../../styles/BackButton.css';\n\nconst LookupViewer = (props) => {\n\n  if (props.allData.isInfoView === false){\n    return (\n      <ViewWindow>\n        <CardBoard state={props.allData} resourceClick={props.resourceClick}/>\n      </ViewWindow>\n    )\n  }\n  else{\n    return (\n      <>\n      <ViewWindow>\n       <DetailWindow state={props.allData} back={props.back}/>\n      </ViewWindow>\n      {document.getElementsByClassName('view-display')[0].scrollTo(0,0)}\n\n       </>\n    )\n  }\n}\n\nexport default LookupViewer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Countdown from \"../Countdown/Countdown\";\nimport LaunchInformation from \"../LaunchInformation/LaunchInformation\";\nimport NavBar from \"../NavBar/NavBar\";\nimport LookupViewer from \"../LookupViewer/LookupViewer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewMode: \"missions\",\n      database: [],\n      isInfoView: false,\n      resourceRequested: \"\",\n      filteredDatabase: [],\n    };\n  }\n\n  componentDidMount() {\n    this.buildDatabase();\n  }\n\n  buildDatabase = async () => {\n    try {\n      const response = await fetch(\n        \"https://api.spacexdata.com/v4/launches/past\"\n      );\n      const data = await response.json();\n      const allRecords = data.map((e, i) => ({\n        id: i,\n        name: e.name,\n        details: e.details ?? \"None Available :(\",\n        date: e.date_unix,\n        patchUrl: e.links.patch.small,\n        videoUrl: `https://www.youtube.com/embed/${e.links.youtube_id}`,\n      }));\n\n      this.setState({ database: allRecords, filteredDatabase: allRecords });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  onMissionSearchClick = (event) => {\n    this.setState({ viewMode: \"missions\", isInfoView: false });\n  };\n\n  onCoresSearchClick = (event) => {\n    this.setState({ viewMode: \"cores\", isInfoView: false });\n  };\n\n  onPayloadsSearchClick = (event) => {\n    this.setState({ viewMode: \"payloads\", isInfoView: false });\n  };\n\n  onUpcomingSearchClick = (event) => {\n    this.setState({ viewMode: \"upcoming\", isInfoView: false });\n  };\n\n  resourceClick = (id) => {\n    this.setState({ resourceRequested: id, isInfoView: true });\n  };\n\n  goBack = () => {\n    this.setState({ isInfoView: false });\n  };\n\n  searchFunction = (event) => {\n    switch (this.state.viewMode) {\n      case \"missions\":\n        const searchTerm = event.target.value.trim().toLowerCase();\n        const filteredDatabase = this.state.database.filter((record) =>\n          record.name.toLowerCase().includes(searchTerm)\n        );\n        this.setState({ filteredDatabase });\n        break;\n      default:\n        return null;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App scroll-parent\">\n        <Countdown />\n        <LaunchInformation />\n        <LookupViewer\n          allData={this.state}\n          back={this.goBack}\n          resourceClick={this.resourceClick}\n        />\n        <NavBar\n          onMissionSearchClick={this.onMissionSearchClick}\n          onCoresSearchClick={this.onCoresSearchClick}\n          onPayloadsSearchClick={this.onPayloadsSearchClick}\n          onUpcomingSearchClick={this.onUpcomingSearchClick}\n          currentView={this.state.viewMode}\n          search={this.searchFunction}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}